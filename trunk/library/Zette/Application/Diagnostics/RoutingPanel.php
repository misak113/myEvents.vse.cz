<?php/** * Copyright (c) 2004 Michael Žabka * */namespace Zette\Application\Diagnostics;use Nette,		Nette\Application\Routers,		Nette\Application\UI\Presenter, // templates		Nette\Diagnostics\Debugger;/** * Routing debugger for Debug Bar. * * @author     Michael Žabka */class RoutingPanel extends Nette\Object implements Nette\Diagnostics\IBarPanel{	/** @var Nette\Application\IRouter */	private $router;	/** @var Nette\Http\IRequest */	private $httpRequest;	/** @var array */	private $routers = array();	/** @var string */	protected $routeString;	/** @var bool|array */	protected $params = false;	/** @var Nette\Application\Request */	//private $request;	public function initializePanel(\Zend_Controller_Request_Abstract $request, \Zette\UI\BaseController $controller, \Zend_Controller_Router_Rewrite $router)	{		Debugger::$blueScreen->addPanel(function ($e) use ($request, $controller) {			return $e ? NULL : array(				'tab' => 'Zette Application',				'panel' => '<h3>Requests</h3>' . Nette\Diagnostics\Helpers::clickableDump($request)						. '<h3>Controller</h3>' . Nette\Diagnostics\Helpers::clickableDump($controller)			);		});		$this->router = $router;		//$this->httpRequest = $httpRequest;	}	/**	 * Renders tab.	 * @return string	 */	public function getTab()	{		try {			$this->analyse($this->router);		} catch (\Nette\FatalErrorException $e) {			$this->routeString = 'no route';		}		ob_start();		require __DIR__ . '/templates/RoutingPanel.tab.phtml';		return ob_get_clean();	}	/**	 * Renders panel.	 * @return string	 */	public function getPanel()	{		ob_start();		require __DIR__ . '/templates/RoutingPanel.panel.phtml';		return ob_get_clean();	}	/**	 * Analyses simple route.	 * @param  Nette\Application\IRouter	 * @return void	 */	private function analyse(\Zend_Controller_Router_Rewrite $router)	{		$this->params = $router->getFrontController()->getRequest()->getParams();		foreach ($router->getRoutes() as $name => $route) {			/** @var \Zette\Application\Route $route  */				/*$request->setPresenterName($request->getPresenterName());				$matched = 'may';				if (empty($this->request)) {					$this->request = $request;				}*/			$module = $route->getDefault('module');			$controller = $route->getDefault('controller');			$action = $route->getDefault('action');			$routeString = ucfirst($module ?$module :'').':'.ucfirst($controller).':'.$action;			$matched = 'no';			if ($name == $router->getCurrentRouteName()) {				$matched = 'yes';				$this->routeString = $routeString;			}			$this->routers[] = array(				'matched' => $matched,				'name' => $name,				'defaults' => $route->getDefaults(),				'mask' => $route instanceof \Zette\Application\Route ?$route->getMask() :'',				'params' => $matched!='no' ?$router->getFrontController()->getRequest()->getParams() :false,				'routeString' => $routeString,			);		}	}}